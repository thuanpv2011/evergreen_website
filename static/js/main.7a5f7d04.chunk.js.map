{"version":3,"sources":["constants/routes.js","constants/action_types.js","components/Navigation/auth.js","components/Navigation/nonauth.js","components/Navigation/index.js","components/Home/auth.js","components/Home/nonauth.js","components/Home/index.js","components/Signup/index.js","components/Login/index.js","components/NotFound/index.js","components/WithAuthenticate/index.js","components/App/index.js","reducers/session.js","reducers/index.js","store/index.js","serviceWorker.js","index.js"],"names":["HOME","LOGIN","SIGN_UP","SET_AUTH_USER","AuthNavigation","dispatch","useDispatch","react_default","a","createElement","className","Link","to","routes","style","justifyContent","onClick","type","actions","authUser","localStorage","removeItem","NonAuthNavigation","Navigation","mapState","useCallback","state","sessionState","useMappedState","auth","nonauth","AuthHome","Fragment","NonAuthHome","Home","Home_auth","Home_nonauth","withRouter","props","_useState","useState","_useState2","Object","slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","confirm","setConfirm","_useState7","_useState8","error","setError","_useState9","_useState10","loading","setLoading","handleChange","setter","e","target","value","submit","_ref","asyncToGenerator","regenerator_default","mark","_callee","requestBody","_ref2","data","_ref3","_id","token","wrap","_context","prev","next","preventDefault","query","concat","axios","post","sent","errors","message","createUser","setItem","history","push","t0","stop","this","_x","apply","arguments","onSubmit","placeholder","onChange","color","login","NotFound","user","getItem","verifyToken","useWithAuthenticate","useEffect","authenticate","App","BrowserRouter","basename","process","components_Navigation","Switch","Route","exact","path","component","components_Home","components_Signup","components_Login","INITIAL_STATE","sessionReducer","length","undefined","action","rootReducer","combineReducers","store","createStore","applyMiddleware","logger","Boolean","window","location","hostname","match","ReactDOM","render","index_es","Provider","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7a5f7d04.chunk.js","sourcesContent":["export const HOME = '/';\r\nexport const LOGIN = '/login';\r\nexport const SIGN_UP = '/signup';","export const SET_AUTH_USER = \"SET_AUTH_USER\";","import React from 'react';\r\nimport { useDispatch } from 'redux-react-hook';\r\nimport { Link } from 'react-router-dom';\r\nimport * as routes from '../../constants/routes';\r\nimport * as actions from '../../constants/action_types';\r\n\r\nfunction AuthNavigation() {\r\n    const dispatch = useDispatch();\r\n\r\n    function logout() {\r\n        dispatch({ type: actions.SET_AUTH_USER, authUser: null });\r\n        localStorage.removeItem('token');\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <div className=\"navbar-left\"><Link to={routes.HOME}>HOME</Link></div>\r\n            <div className=\"navbar-right\" style={{ justifyContent: \"flex-end\" }}>\r\n                <Link to={routes.HOME} onClick={logout}>LOGOUT</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthNavigation;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as routes from '../../constants/routes';\r\n\r\nfunction NonAuthNavigation() {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <div className=\"navbar-left\"><Link to={routes.HOME}>HOME</Link></div>\r\n            <div className=\"navbar-right\">\r\n                <Link to={routes.SIGN_UP}>SIGN UP</Link>\r\n                <Link to={routes.LOGIN}>LOGIN</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NonAuthNavigation;","import React, { useCallback } from 'react';\r\nimport { useMappedState } from 'redux-react-hook';\r\nimport AuthNavigation from './auth';\r\nimport NonAuthNavigation from './nonauth';\r\n\r\nfunction Navigation() {\r\n    const mapState = useCallback((state) => ({\r\n        authUser: state.sessionState.authUser\r\n    }), [])\r\n\r\n    const { authUser } = useMappedState(mapState);\r\n\r\n    return authUser ? <AuthNavigation /> : <NonAuthNavigation />\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nfunction AuthHome() {\r\n    return (\r\n        <>\r\n            <h1>EGT-Home</h1>\r\n            <p>You are logged in</p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthHome;","import React from 'react';\r\n\r\nfunction NonAuthHome() {\r\n    return (\r\n        <>\r\n            <h1>Home</h1>\r\n            <p>Homepage for everyone</p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NonAuthHome;","import React, { useCallback } from 'react';\r\nimport { useMappedState } from 'redux-react-hook';\r\nimport AuthHome from './auth';\r\nimport NonAuthHome from './nonauth';\r\n\r\nfunction Home() {\r\n    const mapState = useCallback((state) => ({\r\n        authUser: state.sessionState.authUser\r\n    }), [])\r\n\r\n    const { authUser } = useMappedState(mapState);\r\n\r\n    return authUser ? <AuthHome /> : <NonAuthHome />\r\n}\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'redux-react-hook';\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as actions from '../../constants/action_types';\r\nimport * as routes from '../../constants/routes';\r\n\r\nfunction Signup(props) {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirm, setConfirm] = useState(\"\");\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = setter => e => {\r\n        setter(e.target.value);\r\n    }\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        try {\r\n            const requestBody = {\r\n                query: `\r\n                    mutation {\r\n                        createUser(userInput: {\r\n                            email: \"${email}\"\r\n                            password: \"${password}\"\r\n                            confirm: \"${confirm}\"\r\n                        }) {\r\n                            _id\r\n                            token\r\n                            email\r\n                        }\r\n                    }\r\n                `\r\n            };\r\n\r\n            const { data } = await axios.post('http://localhost:5000/graphql', requestBody);\r\n\r\n            if (data.errors) {\r\n                setError(data.errors[0].message);\r\n                setLoading(false);\r\n            }\r\n            else {\r\n                setError(null);\r\n                setLoading(false);\r\n                const { _id, token } = await data.data.createUser;\r\n                \r\n                dispatch({\r\n                    type: actions.SET_AUTH_USER,\r\n                    authUser: {\r\n                        _id,\r\n                        email\r\n                    }\r\n                })\r\n                localStorage.setItem('token', token);\r\n                props.history.push(routes.HOME);\r\n            }\r\n        }\r\n        catch (e) {\r\n            setError(e);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Sign up</h1>\r\n            <div className=\"auth-form\">\r\n                <form onSubmit={submit}>\r\n                    <input className=\"form-input\" type=\"email\" placeholder=\"Email\" value={email} onChange={handleChange(setEmail)} />\r\n                    <input className=\"form-input\" type=\"password\" placeholder=\"Password\" value={password} onChange={handleChange(setPassword)} />\r\n                    <input className=\"form-input\" type=\"password\" placeholder=\"Confirm password\" value={confirm} onChange={handleChange(setConfirm)} />\r\n\r\n                    <div><span style={{ color: \"red\" }}>{error || \"\"}</span></div>\r\n\r\n                    <input className=\"form-submit\" type=\"submit\" value={loading ? \"Verifying...\" : \"Register\"} />\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Signup);","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'redux-react-hook';\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as actions from '../../constants/action_types';\r\nimport * as routes from '../../constants/routes';\r\n\r\nfunction Login(props) {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = setter => e => {\r\n        setter(e.target.value);\r\n    }\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        try {\r\n            const requestBody = {\r\n                query: `\r\n                    query {\r\n                        login(email: \"${email}\", password: \"${password}\") {\r\n                            _id\r\n                            token\r\n                            email\r\n                        }\r\n                    }\r\n                `\r\n            };\r\n\r\n            const { data } = await axios.post('http://localhost:5000/graphql', requestBody);\r\n\r\n            if (data.errors) {\r\n                setError(data.errors[0].message);\r\n                setLoading(false);\r\n            }\r\n            else {\r\n                setError(null);\r\n                setLoading(false);\r\n                const { _id, token } = await data.data.login;\r\n                \r\n                dispatch({\r\n                    type: actions.SET_AUTH_USER,\r\n                    authUser: {\r\n                        _id,\r\n                        email\r\n                    }\r\n                })\r\n                localStorage.setItem('token', token);\r\n                props.history.push(routes.HOME);\r\n            }\r\n        }\r\n        catch (e) {\r\n            setError(e);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Login</h1>\r\n            <div className=\"auth-form\">\r\n                <form onSubmit={submit}>\r\n                    <input className=\"form-input\" type=\"email\" placeholder=\"Email\" value={email} onChange={handleChange(setEmail)} />\r\n                    <input className=\"form-input\" type=\"password\" placeholder=\"Password\" onChange={handleChange(setPassword)} />\r\n\r\n                    <div><span style={{ color: \"red\" }}>{error || \"\"}</span></div>\r\n\r\n                    <input className=\"form-submit\" type=\"submit\" value={loading ? \"Verifying...\" : \"Register\"} />\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Login);","import React from 'react';\r\n\r\nfunction NotFound() {\r\n    return <h1>Oops...Page does not exist!</h1>\r\n}\r\n\r\nexport default NotFound;","import { useEffect } from 'react';\r\nimport { useDispatch } from 'redux-react-hook';\r\nimport axios from 'axios';\r\nimport * as actions from '../../constants/action_types';\r\n\r\nasync function authenticate(dispatch) {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!!token) {\r\n        try {\r\n            const requestBody = {\r\n                query: `\r\n                   query {\r\n                       verifyToken(token: \"${token}\") {\r\n                           _id\r\n                           email\r\n                       }\r\n                   }\r\n                `\r\n            }\r\n\r\n            const { data } = await axios.post('http://localhost:5000/graphql', requestBody);\r\n            const user = await data.data.verifyToken;\r\n\r\n            if (user) {\r\n                dispatch({\r\n                    type: actions.SET_AUTH_USER,\r\n                    authUser: {\r\n                        _id: user._id,\r\n                        email: user.email\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                dispatch({ type: actions.SET_AUTH_USER, authUser: null });\r\n                localStorage.removeItem('token');\r\n            }\r\n        }\r\n        catch {\r\n            dispatch({ type: actions.SET_AUTH_USER, authUser: null });\r\n        }\r\n    }\r\n    else {\r\n        dispatch({ type: actions.SET_AUTH_USER, authUser: null });\r\n    }\r\n}\r\n\r\nfunction useWithAuthenticate() {\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        authenticate(dispatch);\r\n    })\r\n}\r\n\r\nexport default useWithAuthenticate;","import React, { useCallback } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom';\r\nimport Navigation from '../Navigation';\r\nimport Home from '../Home';\r\nimport Signup from '../Signup';\r\nimport Login from '../Login';\r\nimport NotFound from '../NotFound';\r\nimport useWithAuthenticate from '../WithAuthenticate';\r\nimport * as routes from '../../constants/routes';\r\nimport { useMappedState } from 'redux-react-hook';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  useWithAuthenticate();\r\n\r\n  const mapState = useCallback((state) => ({\r\n    loading: state.sessionState.loading\r\n  }), [])\r\n\r\n  const { loading } = useMappedState(mapState);\r\n\r\n  if (loading) return <h1>Loading...</h1>\r\n\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <div className=\"App\">\r\n        <Navigation />\r\n        <header className=\"App-header\">\r\n          <Switch>\r\n            <Route exact path={routes.HOME} component={() => <Home />} />\r\n            <Route exact path={routes.SIGN_UP} component={() => <Signup />} />\r\n            <Route exact path={routes.LOGIN} component={() => <Login />} />\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </header>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { SET_AUTH_USER } from '../constants/action_types'\r\n\r\nconst INITIAL_STATE = {\r\n    authUser: null,\r\n    loading: true\r\n};\r\n\r\nfunction sessionReducer(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER: {\r\n            return { authUser: action.authUser, loading: false };\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default sessionReducer;","import { combineReducers } from 'redux';\r\nimport sessionReducer from './session';\r\n\r\nconst rootReducer = combineReducers({\r\n  sessionState: sessionReducer,\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport rootReducer from '../reducers';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(logger));\r\n\r\nexport default store;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport { StoreContext } from 'redux-react-hook';\r\nimport store from './store';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <StoreContext.Provider value={store}>\r\n        <App />\r\n    </StoreContext.Provider>,\r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}